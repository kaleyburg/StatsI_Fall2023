plot(density(df$incom),
main="Monthly net income",
xlab="Euro")
# Which kind of inferences can we make with regards to the population,
# based on the sample data?
mean(df$income) # Sample mean is estimate for population mean
sd(df$income)/sqrt(length(df$income))
# What do we need?
mean(df$income) # Point estimate
sd(df$income)/sqrt(length(df$income)) # Standard error
# The **approximate** solution
# Lower bound, 95 confidence level
upper_95 = mean(df$income)+(1.96*sd(df$income)/sqrt(length(df$income)))
# Upper bound, 95 confidence level
lower_95 = mean(df$income)-(1.96*sd(df$income)/sqrt(length(df$income)))
# What do we need?
mean(df$income) # Point estimate
# Print
lower_95
mean(df$income)
upper_95
# The **precise** solution, using normal distribution
# Lower bound, 95 confidence level
lower_95_n <- qnorm(0.025,
mean = mean(df$incom),
sd = (sd(df$income)/sqrt(length(df$income))))
# Upper bound, 95 confidence level
upper_95_n <- qnorm(0.975,
mean = mean(df$income),
sd = (sd(df$incom)/sqrt(length(df$income))))
# The **precise** solution, using t distribution
t_score <- qt(0.995, df=length(df$income)-1)
qt(0.005, df=length(df$income)-1) # critical value for first 0.5%
qt(0.995, df=length(df$income)-1) # last 0.5%
qt(0.005, df=length(df$income)-1, lower.tail=FALSE) # last 0.5%
# Print
lower_99_t
mean(df$income)
# Update Histogram
hist(df$income)
abline(v=mean(df$income),col="black")
abline(v=lower_95,col="black",lty="dashed")
abline(v=upper_95,col="black",lty="dashed")
# Scatter plot
plot(df$income,df$edu)
plot(df$income,df$edu,
col=df$cap+1) # Color over third variable (+1, because first color in R is white)
t90 <- qt((1 - .90)/2, df_y, lower.tail = FALSE)
# remove objects
rm(list=ls())
function (x, df1, df2, ncp, log = FALSE)
{
if (missing(ncp))
.Call(C_df, x, df1, df2, log)
else .Call(C_dnf, x, df1, df2, ncp, log)
}
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
lapply(c(),  pkgTest)
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#mean of sample
y_mean <- mean(y)
print(y_mean)
#standard deviation of sample
y_sd <- sd(y)
print(y_sd)
#length of sample
n <- length(y)
print(n)
#standard error of sample
y_se <- y_sd/(sqrt(n))
print(y_se)
#degrees of freedom for y
df_y <- n-1
print(df_y)
?qt
t90 <- qt((1 - .90)/2, df_y, lower.tail = FALSE)
t90 <- qt((1 - .90)/2, df_y, lower.tail = FALSE)
t90 <- qt((1 - .90)/2, df_y, lower.tail = T)
t90 <- qt((1 - .90)/2, df_y, lower.tail = FALSE)
t90t <- qt((1 - .90)/2, df_y, lower.tail = T)
?qt
t90t <- qt((1 - .1)/2, df_y, lower.tail = T)
t90t <- qt((1 - .1)/2, df_y, lower.tail = T)
t90 <- qt((1 - .90)/2, df_y, lower.tail = FALSE)
t90t <- qt((1 - .1)/2, df_y, lower.tail = T)
t90t <- qt((1 - .1)/2, df_y, lower.tail = F)
t90t <- qt(.95, df_y, lower.tail = F)
t90t <- qt(.95, df_y, lower.tail = T)
t90t <- qt(.95, df_y, lower.tail = F)
#OR
t90_alt <- qt(.90+((1-.90/2)), df_y)
#OR
t90_alt <- qt((.90+((1-.90/2))), df_y)
#OR
t90_alt <- qt(.95, df_y)
rm(t90t)
t95 <- qt((1 - .95), df_y, lower.tail = F)
t95
print(y_t)
y_t <- ((y_mean - 100)/y_se)
y_t
print(y_t)
p_y <- pt(y_t, df_y, lower.tail = F)
p_y
print(y_t)
?t.test
t.test(y, mu = 100, alternative = "more")
t.test(y, mu = 100, alternative = "greater")
print(confint90)
lower_90 <- y_mean - (t90 * (y_se))
upper_90 <- y_mean + (t90 * (y_se))
confint90 <- c(lower_90, upper_90)
print(confint90)
expenditure <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/expenditure.txt", header=T)
source("~/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/PS01.R", echo=TRUE)
print(confint90)
# Step by step
?qnorm
?qt
source("~/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/PS01.R", echo=TRUE)
str(expenditure)
head(expenditure)
View(expenditure)
plot(expenditure$STATE, expenditure$Y, expenditure$X1, expenditure$X2,
expenditure$X3)
plot(expenditure$Y, expenditure$X1, expenditure$X2,
expenditure$X3)
plot(expenditure$Y, expenditure$X1, expenditure$X2, expenditure$X3)
plot(expenditure$Y)
plot(expenditure$Y,X1)
plot(expenditure$Y, expenditure$X1)
?plot
plot(expenditure$Y, expenditure$X1, pch=16, col=expenditure$Y)
plot(expenditure$Y, expenditure$X1, pch=16, col=expenditure$X1)
#https://thomasleeper.com/Rcourse/Tutorials/plotcolors.html
plot(expenditure$Y, expenditure$X1, pch=15, col=expenditure$X1)
#https://thomasleeper.com/Rcourse/Tutorials/plotcolors.html
plot(expenditure$Y, expenditure$X1, pch=16, col=expenditure$X1)
#https://thomasleeper.com/Rcourse/Tutorials/plotcolors.html
plot(expenditure$Y, expenditure$X1, pch=16,col = c("red", "blue"))
#https://thomasleeper.com/Rcourse/Tutorials/plotcolors.html
plot(expenditure$Y, expenditure$X1, pch=16,col = c("black", "blue"))
#https://thomasleeper.com/Rcourse/Tutorials/plotcolors.html
plot(expenditure$Y, expenditure$X1, expenditure$X2, pch=16,col = c("black", "blue"))
#https://thomasleeper.com/Rcourse/Tutorials/plotcolors.html
plot(expenditure$Y, expenditure$X1, pch=16,col = c("black", "blue"))
plot(expenditure$Y, expenditure$X2, pch=16,col = c("black", "red"))
plot(expenditure$Y, expenditure$X3, pch=16,col = c("black", "green"))
#https://thomasleeper.com/Rcourse/Tutorials/plotcolors.html
plot(expenditure$Y, expenditure$X1, pch=16,col = c("black", "blue"))
plot(expenditure$Y, expenditure$X2, pch=16,col = c("black", "red"))
plot(expenditure$Y, expenditure$X3, pch=16,col = c("black", "green"))
plot(expenditure$X1, expenditure$X2, pch=16,col = c("black", "orange"))
plot(expenditure$X1, expenditure$X3, pch=16,col = c("black", "purple"))
plot(expenditure$X2, expenditure$X3, pch=16,col = c("black", "pink"))
#plotting the relationships between Y, X1, X2, and X3
#https://thomasleeper.com/Rcourse/Tutorials/plotcolors.html
plot(expenditure$X1, expenditure$Y, pch=16,col = c("black", "blue"))
plot(expenditure$X2, expenditure$Y, pch=16,col = c("black", "red"))
plot(expenditure$X3, expenditure$Y, pch=16,col = c("black", "green"))
#https://thomasleeper.com/Rcourse/Tutorials/plotcolors.html
#found this website for setting colors
plot(expenditure$X1, pch=16,col = c("blue"))
plot(expenditure$X1, expenditure$Y, pch=16,col = c("black", "blue"))
plot(expenditure$X1, expenditure$Y, pch=16,col = c("blue"))
plot(expenditure$X2, expenditure$Y, pch=16,col = c("red"))
plot(expenditure$X3, expenditure$Y, pch=16,col = c("green"))
plot(expenditure$X1, expenditure$X2, pch=16,col = c("orange"))
plot(expenditure$X1, expenditure$X3, pch=16,col = c("purple"))
plot(expenditure$X2, expenditure$X3, pch=16,col = c("pink"))
plot(expenditure$Region, expenditure$Y, pch=16,col = c("lightblue"))
plot(mean(expenditure$Region), expenditure$Y, pch=16,col = c("lightblue"))
plot(meanexpenditure$Region, expenditure$Y, pch=16,col = c("lightblue"))
plot(expenditure$Region, expenditure$Y, pch=16,col = c("lightblue"))
?hist
mean(expenditure$Region)
mean(expenditure$Region$1)
mean(expenditure$Region$"1"")
mean(expenditure$Region$"1")
mean(expenditure$Region[1])
reg_1_mean <- expenditure[diamonds$Region == "1",]
reg_1_mean <- expenditure[expenditure$Region == "1",]
reg_1 <- expenditure[expenditure$Region == "1",]
reg_1 <- expenditure[expenditure$Region == "1",]
reg_2 <- expenditure[expenditure$Region == "2",]
reg_3 <- expenditure[expenditure$Region == "3",]
reg_4 <- expenditure[expenditure$Region == "4",]
mean(reg_1)
mean(reg_1$Y1)
View(reg_1)
mean(reg_1$Y)
reg_1_mean <- mean(reg_1$Y)
reg_2_mean <- mean(reg_1$Y)
reg_3_mean <- mean(reg_1$Y)
reg_4_mean <- mean(reg_1$Y)
reg_2_mean <- mean(reg_2$Y)
reg_3_mean <- mean(reg_3$Y)
reg_4_mean <- mean(reg_4$Y)
#plotting the relationship between Y and X1
plot(expenditure$X1, expenditure$Y, pch=16,col = c("lightgreen"))
plot(expenditure$X1, expenditure$Y, Region, pch=16,col = c("blue"))
plot(expenditure$X1, expenditure$Y, expenditure$Region, pch=16,col = c("blue"))
plot(expenditure$X1, expenditure$Y, data =filter(expenditure, Region))
plot(expenditure$X1, expenditure$Y, data =filter(expenditure$Region))
?plot
plot(expenditure$X1, expenditure$Y, filter(expenditure$Region))
plot(expenditure$X1, expenditure$Y,
filter(expenditure$Region == "1", "2", "3", "4"))
plot(expenditure$X1, expenditure$Y,
filter(expenditure$Region == "1", "2", "3", "4"))
?plot
plot(expenditure$X1, expenditure$Y,
by(expenditure, expenditure$Region))
plot(expenditure$X1, expenditure$Y, by(expenditure$Region))
plot(expenditure$X1, expenditure$Y)
plot(expenditure$X1, expenditure$Y, col=c("blue", "green")[Region]))
plot(expenditure$X1, expenditure$Y, col=c("blue", "green")[Region])
plot(expenditure$X1, expenditure$Y,
col=c("blue", "green")[expenditure$Region])
plot(expenditure$X1, expenditure$Y,
col=c("red", "orange", "yellow", "green")[expenditure$Region])
plot(expenditure$X1, expenditure$Y,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")
plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")
{plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
legend("topleft", pch=c(16,15), col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
{plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
{plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
{plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=c(16,15), col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
legend("topleft", pch=c(16,15,14,13), col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
{plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=c(16,15,14,13), col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
{plot(expenditure$X1, expenditure$Y, pch=c(16,15,14,13),
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=c(16,15,14,13), col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
{plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
library(ggplot)
library(tidyverse)
diamonds %>%
filter(Region %in% c("1", "2", "3")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = Region)) +
geom_smooth() +
theme_classic() +
labs(title = "test")
expenditure %>%
filter(Region %in% c("1", "2", "3")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = Region)) +
geom_smooth() +
theme_classic() +
labs(title = "test")
expenditure %>%
filter(Region %in% c("1", "2", "3")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = Region)) +
theme_classic() +
labs(title = "test")
diamonds %>%
filter(cut %in% c("Ideal", "Premium", "Very Good")) %>%
group_by(cut) %>%
ggplot(aes(carat, price, color = cut)) +
geom_point() +
theme_classic() +
labs(title = "Pick a good title for this plot")
diamonds %>%
filter(cut %in% c("Ideal", "Premium", "Very Good")) %>%
group_by(cut) %>%
ggplot(aes(carat, price, color = cut)) +
geom_point() +
theme_classic() +
labs(title = "Pick a good title for this plot")
expenditure %>%
filter(Region %in% c("1", "2", "3")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = Region)) +
theme_classic() +
labs(title = "test")
expenditure %>%
filter(Region %in% c("1", "2", "3")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = Region)) +
geom_point()
ggplot(aes(X1, Y, color = as.factor(Region)) +
ggplot(aes(X1, Y, color = as.factor(Region)) +
expenditure %>%
filter(Region %in% c("1", "2", "3")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region))) +
geom_point()
expenditure %>%
expenditure %>%
filter(Region %in% c("1", "2", "3")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region))) +
geom_point()
{plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
expenditure %>%
filter(Region %in% c("1", "2", "3")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region))) +
geom_point()
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region))) +
geom_point()
{plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region))),
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
print(confint90)
p_y
y_t
reg_means <- c(reg_1_mean, reg_2_mean, reg_3_mean, reg_4_mean)
plot(reg_means, expenditure$Y)
reg_means <- as.factor(reg_means)
plot(reg_means, expenditure$Y)
plot(reg_means)
reg_means <- c(reg_1_mean, reg_2_mean, reg_3_mean, reg_4_mean)
plot(reg_means)
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
theme_dark() +
labs(title = "test")
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
theme_classic() +
labs(title = "test")
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
print(y_mean)
#standard deviation of sample
y_sd <- sd(y)
print(y_sd)
#length of sample
n <- length(y)
print(n)
#standard error of sample
y_se <- y_sd/(sqrt(n))
print(y_se)
print(confint90)
round(confint90, 2)
source("~/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/PS01.mine.R", echo=TRUE)
plot(reg_means)
plot(expenditure$Region, expenditure$Y, pch=16,col = c("lightblue"))
mean(expenditure$Region)
reg_1_mean <- mean(reg_1$Y)
reg_2_mean <- mean(reg_2$Y)
reg_3_mean <- mean(reg_3$Y)
reg_4_mean <- mean(reg_4$Y)
plot(reg_means)
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
library(tidyverse)
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
p_y
t.test(y, mu = 100, alternative = "greater")
t95
y_t
p_y
library(tidyverse)
plot(expenditure$X1, expenditure$Y, pch=16,col = c("blue"))
plot(expenditure$X2, expenditure$Y, pch=16,col = c("red"))
plot(expenditure$X3, expenditure$Y, pch=16,col = c("green"))
plot(expenditure$X1, expenditure$X2, pch=16,col = c("orange"))
plot(expenditure$X1, expenditure$X3, pch=16,col = c("purple"))
plot(expenditure$X2, expenditure$X3, pch=16,col = c("pink"))
getwd()
setwd("C:/Users/kburg/OneDrive/Documents/GitHub/StatsI_Fall2023/problemSets
/PS01/my_answers")
setwd("C:/Users/kburg/OneDrive/Documents/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers")
getwd()
plot(reg_means)
plot(expenditure$Region, expenditure$Y, pch=16,col = c("lightblue"))
plot(reg_means)
plot(reg_means, col = c("lightblue"))
plot(expenditure$Region, expenditure$Y, pch=16,col = c("darkblue"))
plot(reg_means, col = c("darkblue"))
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
plot(expenditure$Region, expenditure$Y, pch=16,col = c("darkblue"))
reg_1_mean <- mean(reg_1$Y)
reg_2_mean <- mean(reg_2$Y)
reg_3_mean <- mean(reg_3$Y)
reg_4_mean <- mean(reg_4$Y)
plot(reg_means, col = c("darkblue"))
#plotting the relationship between Y and X1
#I found this https://hbctraining.github.io/Intro-to-R/lessons/basic_plots_in_r.html#:~:text=Basic%20plots%20in%20R,function%20for%20plotting%20x%2Dy%20data.
#plot(expenditure$X1, expenditure$Y, pch=16,col = c("lightgreen"))
#plot(expenditure$X1, expenditure$Y, expenditure$Region, pch=16,col = c("blue"))
{plot(expenditure$X1, expenditure$Y, pch=16,
col=c("red", "purple", "green", "blue")[expenditure$Region])
legend("topleft", pch=16, col=c("red", "purple", "green", "blue"),
c("1", "2", "3", "4"), cex=0.8,
title="Region")}
expenditure %>%
filter(Region %in% c("1", "2", "3", "4")) %>%
group_by(Region) %>%
ggplot(aes(X1, Y, color = as.factor(Region), shape = as.factor(Region))) +
geom_point()
#####################
# load libraries
# set wd
# clear global .envir
#####################
getwd()
